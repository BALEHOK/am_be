//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace AppFramework.Entities
{
    [DataContract(IsReference = true)]
    public partial class IndexActiveDynEntities: IObjectWithChangeTracker, INotifyPropertyChanged, IDataEntity, ISearchable
    {
        #region Primitive Properties
    
        [DataMember]
        public long IndexUid
        {
            get { return _indexUid; }
            set
            {
                if (_indexUid != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IndexUid' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _indexUid = value;
                    OnPropertyChanged("IndexUid");
                }
            }
        }
        private long _indexUid;
    
        [DataMember]
        public long DynEntityUid
        {
            get { return _dynEntityUid; }
            set
            {
                if (_dynEntityUid != value)
                {
                    _dynEntityUid = value;
                    OnPropertyChanged("DynEntityUid");
                }
            }
        }
        private long _dynEntityUid;
    
        [DataMember]
        public string BarCode
        {
            get { return _barCode; }
            set
            {
                if (_barCode != value)
                {
                    _barCode = value;
                    OnPropertyChanged("BarCode");
                }
            }
        }
        private string _barCode;
    
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _name;
    
        [DataMember]
        public string Description
        {
            get { return _description; }
            set
            {
                if (_description != value)
                {
                    _description = value;
                    OnPropertyChanged("Description");
                }
            }
        }
        private string _description;
    
        [DataMember]
        public string Keywords
        {
            get { return _keywords; }
            set
            {
                if (_keywords != value)
                {
                    _keywords = value;
                    OnPropertyChanged("Keywords");
                }
            }
        }
        private string _keywords;
    
        [DataMember]
        public string EntityConfigKeywords
        {
            get { return _entityConfigKeywords; }
            set
            {
                if (_entityConfigKeywords != value)
                {
                    _entityConfigKeywords = value;
                    OnPropertyChanged("EntityConfigKeywords");
                }
            }
        }
        private string _entityConfigKeywords;
    
        [DataMember]
        public string AllAttrib2IndexValues
        {
            get { return _allAttrib2IndexValues; }
            set
            {
                if (_allAttrib2IndexValues != value)
                {
                    _allAttrib2IndexValues = value;
                    OnPropertyChanged("AllAttrib2IndexValues");
                }
            }
        }
        private string _allAttrib2IndexValues;
    
        [DataMember]
        public string AllContextAttribValues
        {
            get { return _allContextAttribValues; }
            set
            {
                if (_allContextAttribValues != value)
                {
                    _allContextAttribValues = value;
                    OnPropertyChanged("AllContextAttribValues");
                }
            }
        }
        private string _allContextAttribValues;
    
        [DataMember]
        public string AllAttribValues
        {
            get { return _allAttribValues; }
            set
            {
                if (_allAttribValues != value)
                {
                    _allAttribValues = value;
                    OnPropertyChanged("AllAttribValues");
                }
            }
        }
        private string _allAttribValues;
    
        [DataMember]
        public string CategoryKeywords
        {
            get { return _categoryKeywords; }
            set
            {
                if (_categoryKeywords != value)
                {
                    _categoryKeywords = value;
                    OnPropertyChanged("CategoryKeywords");
                }
            }
        }
        private string _categoryKeywords;
    
        [DataMember]
        public string TaxonomyKeywords
        {
            get { return _taxonomyKeywords; }
            set
            {
                if (_taxonomyKeywords != value)
                {
                    _taxonomyKeywords = value;
                    OnPropertyChanged("TaxonomyKeywords");
                }
            }
        }
        private string _taxonomyKeywords;
    
        [DataMember]
        public string User
        {
            get { return _user; }
            set
            {
                if (_user != value)
                {
                    _user = value;
                    OnPropertyChanged("User");
                }
            }
        }
        private string _user;
    
        [DataMember]
        public long LocationUid
        {
            get { return _locationUid; }
            set
            {
                if (_locationUid != value)
                {
                    _locationUid = value;
                    OnPropertyChanged("LocationUid");
                }
            }
        }
        private long _locationUid;
    
        [DataMember]
        public string Location
        {
            get { return _location; }
            set
            {
                if (_location != value)
                {
                    _location = value;
                    OnPropertyChanged("Location");
                }
            }
        }
        private string _location;
    
        [DataMember]
        public string Department
        {
            get { return _department; }
            set
            {
                if (_department != value)
                {
                    _department = value;
                    OnPropertyChanged("Department");
                }
            }
        }
        private string _department;
    
        [DataMember]
        public long DynEntityConfigUid
        {
            get { return _dynEntityConfigUid; }
            set
            {
                if (_dynEntityConfigUid != value)
                {
                    _dynEntityConfigUid = value;
                    OnPropertyChanged("DynEntityConfigUid");
                }
            }
        }
        private long _dynEntityConfigUid;
    
        [DataMember]
        public System.DateTime UpdateDate
        {
            get { return _updateDate; }
            set
            {
                if (_updateDate != value)
                {
                    _updateDate = value;
                    OnPropertyChanged("UpdateDate");
                }
            }
        }
        private System.DateTime _updateDate;
    
        [DataMember]
        public string CategoryUids
        {
            get { return _categoryUids; }
            set
            {
                if (_categoryUids != value)
                {
                    _categoryUids = value;
                    OnPropertyChanged("CategoryUids");
                }
            }
        }
        private string _categoryUids;
    
        [DataMember]
        public string TaxonomyUids
        {
            get { return _taxonomyUids; }
            set
            {
                if (_taxonomyUids != value)
                {
                    _taxonomyUids = value;
                    OnPropertyChanged("TaxonomyUids");
                }
            }
        }
        private string _taxonomyUids;
    
        [DataMember]
        public long OwnerId
        {
            get { return _ownerId; }
            set
            {
                if (_ownerId != value)
                {
                    _ownerId = value;
                    OnPropertyChanged("OwnerId");
                }
            }
        }
        private long _ownerId;
    
        [DataMember]
        public long DepartmentId
        {
            get { return _departmentId; }
            set
            {
                if (_departmentId != value)
                {
                    _departmentId = value;
                    OnPropertyChanged("DepartmentId");
                }
            }
        }
        private long _departmentId;
    
        [DataMember]
        public long DynEntityId
        {
            get { return _dynEntityId; }
            set
            {
                if (_dynEntityId != value)
                {
                    _dynEntityId = value;
                    OnPropertyChanged("DynEntityId");
                }
            }
        }
        private long _dynEntityId;
    
        [DataMember]
        public string TaxonomyItemsIds
        {
            get { return _taxonomyItemsIds; }
            set
            {
                if (_taxonomyItemsIds != value)
                {
                    _taxonomyItemsIds = value;
                    OnPropertyChanged("TaxonomyItemsIds");
                }
            }
        }
        private string _taxonomyItemsIds;
    
        [DataMember]
        public long DynEntityConfigId
        {
            get { return _dynEntityConfigId; }
            set
            {
                if (_dynEntityConfigId != value)
                {
                    _dynEntityConfigId = value;
                    OnPropertyChanged("DynEntityConfigId");
                }
            }
        }
        private long _dynEntityConfigId;
    
        [DataMember]
        public string DisplayValues
        {
            get { return _displayValues; }
            set
            {
                if (_displayValues != value)
                {
                    _displayValues = value;
                    OnPropertyChanged("DisplayValues");
                }
            }
        }
        private string _displayValues;
    
        [DataMember]
        public string DisplayExtValues
        {
            get { return _displayExtValues; }
            set
            {
                if (_displayExtValues != value)
                {
                    _displayExtValues = value;
                    OnPropertyChanged("DisplayExtValues");
                }
            }
        }
        private string _displayExtValues;
    
        [DataMember]
        public Nullable<long> UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    _userId = value;
                    OnPropertyChanged("UserId");
                }
            }
        }
        private Nullable<long> _userId;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
