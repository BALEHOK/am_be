//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace AppFramework.Entities
{
    [DataContract(IsReference = true)]
    public partial class DynEntityUser: IObjectWithChangeTracker, INotifyPropertyChanged, IDataEntity
    {
        #region Primitive Properties
    
        [DataMember]
        public long DynEntityUid
        {
            get { return _dynEntityUid; }
            set
            {
                if (_dynEntityUid != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'DynEntityUid' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _dynEntityUid = value;
                    OnPropertyChanged("DynEntityUid");
                }
            }
        }
        private long _dynEntityUid;
    
        [DataMember]
        public long DynEntityId
        {
            get { return _dynEntityId; }
            set
            {
                if (_dynEntityId != value)
                {
                    _dynEntityId = value;
                    OnPropertyChanged("DynEntityId");
                }
            }
        }
        private long _dynEntityId;
    
        [DataMember]
        public bool ActiveVersion
        {
            get { return _activeVersion; }
            set
            {
                if (_activeVersion != value)
                {
                    _activeVersion = value;
                    OnPropertyChanged("ActiveVersion");
                }
            }
        }
        private bool _activeVersion;
    
        [DataMember]
        public long DynEntityConfigUid
        {
            get { return _dynEntityConfigUid; }
            set
            {
                if (_dynEntityConfigUid != value)
                {
                    _dynEntityConfigUid = value;
                    OnPropertyChanged("DynEntityConfigUid");
                }
            }
        }
        private long _dynEntityConfigUid;
    
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _name;
    
        [DataMember]
        public Nullable<int> Revision
        {
            get { return _revision; }
            set
            {
                if (_revision != value)
                {
                    _revision = value;
                    OnPropertyChanged("Revision");
                }
            }
        }
        private Nullable<int> _revision;
    
        [DataMember]
        public string Barcode
        {
            get { return _barcode; }
            set
            {
                if (_barcode != value)
                {
                    _barcode = value;
                    OnPropertyChanged("Barcode");
                }
            }
        }
        private string _barcode;
    
        [DataMember]
        public Nullable<long> LocationId
        {
            get { return _locationId; }
            set
            {
                if (_locationId != value)
                {
                    _locationId = value;
                    OnPropertyChanged("LocationId");
                }
            }
        }
        private Nullable<long> _locationId;
    
        [DataMember]
        public Nullable<long> BaseLocationId
        {
            get { return _baseLocationId; }
            set
            {
                if (_baseLocationId != value)
                {
                    _baseLocationId = value;
                    OnPropertyChanged("BaseLocationId");
                }
            }
        }
        private Nullable<long> _baseLocationId;
    
        [DataMember]
        public Nullable<long> NextLocationId
        {
            get { return _nextLocationId; }
            set
            {
                if (_nextLocationId != value)
                {
                    _nextLocationId = value;
                    OnPropertyChanged("NextLocationId");
                }
            }
        }
        private Nullable<long> _nextLocationId;
    
        [DataMember]
        public Nullable<long> DepartmentId
        {
            get { return _departmentId; }
            set
            {
                if (_departmentId != value)
                {
                    _departmentId = value;
                    OnPropertyChanged("DepartmentId");
                }
            }
        }
        private Nullable<long> _departmentId;
    
        [DataMember]
        public Nullable<long> UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    _userId = value;
                    OnPropertyChanged("UserId");
                }
            }
        }
        private Nullable<long> _userId;
    
        [DataMember]
        public Nullable<long> OwnerId
        {
            get { return _ownerId; }
            set
            {
                if (_ownerId != value)
                {
                    _ownerId = value;
                    OnPropertyChanged("OwnerId");
                }
            }
        }
        private Nullable<long> _ownerId;
    
        [DataMember]
        public long UpdateUserId
        {
            get { return _updateUserId; }
            set
            {
                if (_updateUserId != value)
                {
                    _updateUserId = value;
                    OnPropertyChanged("UpdateUserId");
                }
            }
        }
        private long _updateUserId;
    
        [DataMember]
        public System.DateTime UpdateDate
        {
            get { return _updateDate; }
            set
            {
                if (_updateDate != value)
                {
                    _updateDate = value;
                    OnPropertyChanged("UpdateDate");
                }
            }
        }
        private System.DateTime _updateDate;
    
        [DataMember]
        public Nullable<double> StockCount
        {
            get { return _stockCount; }
            set
            {
                if (_stockCount != value)
                {
                    _stockCount = value;
                    OnPropertyChanged("StockCount");
                }
            }
        }
        private Nullable<double> _stockCount;
    
        [DataMember]
        public Nullable<double> StockPrice
        {
            get { return _stockPrice; }
            set
            {
                if (_stockPrice != value)
                {
                    _stockPrice = value;
                    OnPropertyChanged("StockPrice");
                }
            }
        }
        private Nullable<double> _stockPrice;
    
        [DataMember]
        public Nullable<long> DocumentId
        {
            get { return _documentId; }
            set
            {
                if (_documentId != value)
                {
                    _documentId = value;
                    OnPropertyChanged("DocumentId");
                }
            }
        }
        private Nullable<long> _documentId;
    
        [DataMember]
        public string Password
        {
            get { return _password; }
            set
            {
                if (_password != value)
                {
                    _password = value;
                    OnPropertyChanged("Password");
                }
            }
        }
        private string _password;
    
        [DataMember]
        public string Email
        {
            get { return _email; }
            set
            {
                if (_email != value)
                {
                    _email = value;
                    OnPropertyChanged("Email");
                }
            }
        }
        private string _email;
    
        [DataMember]
        public Nullable<System.DateTime> LastLoginDate
        {
            get { return _lastLoginDate; }
            set
            {
                if (_lastLoginDate != value)
                {
                    _lastLoginDate = value;
                    OnPropertyChanged("LastLoginDate");
                }
            }
        }
        private Nullable<System.DateTime> _lastLoginDate;
    
        [DataMember]
        public Nullable<System.DateTime> LastActivityDate
        {
            get { return _lastActivityDate; }
            set
            {
                if (_lastActivityDate != value)
                {
                    _lastActivityDate = value;
                    OnPropertyChanged("LastActivityDate");
                }
            }
        }
        private Nullable<System.DateTime> _lastActivityDate;
    
        [DataMember]
        public Nullable<System.DateTime> LastLockoutDate
        {
            get { return _lastLockoutDate; }
            set
            {
                if (_lastLockoutDate != value)
                {
                    _lastLockoutDate = value;
                    OnPropertyChanged("LastLockoutDate");
                }
            }
        }
        private Nullable<System.DateTime> _lastLockoutDate;
    
        [DataMember]
        public Nullable<long> Users
        {
            get { return _users; }
            set
            {
                if (_users != value)
                {
                    _users = value;
                    OnPropertyChanged("Users");
                }
            }
        }
        private Nullable<long> _users;
    
        [DataMember]
        public byte PermissionOnUsers
        {
            get { return _permissionOnUsers; }
            set
            {
                if (_permissionOnUsers != value)
                {
                    _permissionOnUsers = value;
                    OnPropertyChanged("PermissionOnUsers");
                }
            }
        }
        private byte _permissionOnUsers;
    
        [DataMember]
        public Nullable<int> Role
        {
            get { return _role; }
            set
            {
                if (_role != value)
                {
                    _role = value;
                    OnPropertyChanged("Role");
                }
            }
        }
        private Nullable<int> _role;
    
        [DataMember]
        public Nullable<long> Taalcode
        {
            get { return _taalcode; }
            set
            {
                if (_taalcode != value)
                {
                    _taalcode = value;
                    OnPropertyChanged("Taalcode");
                }
            }
        }
        private Nullable<long> _taalcode;
    
        [DataMember]
        public Nullable<long> ActiefInactief
        {
            get { return _actiefInactief; }
            set
            {
                if (_actiefInactief != value)
                {
                    _actiefInactief = value;
                    OnPropertyChanged("ActiefInactief");
                }
            }
        }
        private Nullable<long> _actiefInactief;
    
        [DataMember]
        public Nullable<long> District
        {
            get { return _district; }
            set
            {
                if (_district != value)
                {
                    _district = value;
                    OnPropertyChanged("District");
                }
            }
        }
        private Nullable<long> _district;
    
        [DataMember]
        public Nullable<int> DistrictUserType
        {
            get { return _districtUserType; }
            set
            {
                if (_districtUserType != value)
                {
                    _districtUserType = value;
                    OnPropertyChanged("DistrictUserType");
                }
            }
        }
        private Nullable<int> _districtUserType;
    
        [DataMember]
        public long TaalcodeG
        {
            get { return _taalcodeG; }
            set
            {
                if (_taalcodeG != value)
                {
                    _taalcodeG = value;
                    OnPropertyChanged("TaalcodeG");
                }
            }
        }
        private long _taalcodeG;
    
        [DataMember]
        public long ActiefInactiefC
        {
            get { return _actiefInactiefC; }
            set
            {
                if (_actiefInactiefC != value)
                {
                    _actiefInactiefC = value;
                    OnPropertyChanged("ActiefInactiefC");
                }
            }
        }
        private long _actiefInactiefC;
    
        [DataMember]
        public Nullable<long> PersonProfile
        {
            get { return _personProfile; }
            set
            {
                if (_personProfile != value)
                {
                    _personProfile = value;
                    OnPropertyChanged("PersonProfile");
                }
            }
        }
        private Nullable<long> _personProfile;
    
        [DataMember]
        public Nullable<long> Staff
        {
            get { return _staff; }
            set
            {
                if (_staff != value)
                {
                    _staff = value;
                    OnPropertyChanged("Staff");
                }
            }
        }
        private Nullable<long> _staff;
    
        [DataMember]
        public Nullable<long> Unionist
        {
            get { return _unionist; }
            set
            {
                if (_unionist != value)
                {
                    _unionist = value;
                    OnPropertyChanged("Unionist");
                }
            }
        }
        private Nullable<long> _unionist;
    
        [DataMember]
        public Nullable<long> Contact
        {
            get { return _contact; }
            set
            {
                if (_contact != value)
                {
                    _contact = value;
                    OnPropertyChanged("Contact");
                }
            }
        }
        private Nullable<long> _contact;
    
        [DataMember]
        public Nullable<long> Title
        {
            get { return _title; }
            set
            {
                if (_title != value)
                {
                    _title = value;
                    OnPropertyChanged("Title");
                }
            }
        }
        private Nullable<long> _title;
    
        [DataMember]
        public string Initials
        {
            get { return _initials; }
            set
            {
                if (_initials != value)
                {
                    _initials = value;
                    OnPropertyChanged("Initials");
                }
            }
        }
        private string _initials;
    
        [DataMember]
        public string Gender
        {
            get { return _gender; }
            set
            {
                if (_gender != value)
                {
                    _gender = value;
                    OnPropertyChanged("Gender");
                }
            }
        }
        private string _gender;
    
        [DataMember]
        public string PersonName
        {
            get { return _personName; }
            set
            {
                if (_personName != value)
                {
                    _personName = value;
                    OnPropertyChanged("PersonName");
                }
            }
        }
        private string _personName;
    
        [DataMember]
        public string PersonSecondName
        {
            get { return _personSecondName; }
            set
            {
                if (_personSecondName != value)
                {
                    _personSecondName = value;
                    OnPropertyChanged("PersonSecondName");
                }
            }
        }
        private string _personSecondName;
    
        [DataMember]
        public Nullable<long> HomeAddress
        {
            get { return _homeAddress; }
            set
            {
                if (_homeAddress != value)
                {
                    _homeAddress = value;
                    OnPropertyChanged("HomeAddress");
                }
            }
        }
        private Nullable<long> _homeAddress;
    
        [DataMember]
        public Nullable<long> WorkAddress
        {
            get { return _workAddress; }
            set
            {
                if (_workAddress != value)
                {
                    _workAddress = value;
                    OnPropertyChanged("WorkAddress");
                }
            }
        }
        private Nullable<long> _workAddress;
    
        [DataMember]
        public Nullable<long> Language
        {
            get { return _language; }
            set
            {
                if (_language != value)
                {
                    _language = value;
                    OnPropertyChanged("Language");
                }
            }
        }
        private Nullable<long> _language;
    
        [DataMember]
        public Nullable<long> Organizaiton
        {
            get { return _organizaiton; }
            set
            {
                if (_organizaiton != value)
                {
                    _organizaiton = value;
                    OnPropertyChanged("Organizaiton");
                }
            }
        }
        private Nullable<long> _organizaiton;
    
        [DataMember]
        public string IdentityCardNumber
        {
            get { return _identityCardNumber; }
            set
            {
                if (_identityCardNumber != value)
                {
                    _identityCardNumber = value;
                    OnPropertyChanged("IdentityCardNumber");
                }
            }
        }
        private string _identityCardNumber;
    
        [DataMember]
        public Nullable<System.DateTime> BirthDate
        {
            get { return _birthDate; }
            set
            {
                if (_birthDate != value)
                {
                    _birthDate = value;
                    OnPropertyChanged("BirthDate");
                }
            }
        }
        private Nullable<System.DateTime> _birthDate;
    
        [DataMember]
        public string BirthPlace
        {
            get { return _birthPlace; }
            set
            {
                if (_birthPlace != value)
                {
                    _birthPlace = value;
                    OnPropertyChanged("BirthPlace");
                }
            }
        }
        private string _birthPlace;
    
        [DataMember]
        public string Photo
        {
            get { return _photo; }
            set
            {
                if (_photo != value)
                {
                    _photo = value;
                    OnPropertyChanged("Photo");
                }
            }
        }
        private string _photo;
    
        [DataMember]
        public Nullable<bool> ChristmasCardRecipient
        {
            get { return _christmasCardRecipient; }
            set
            {
                if (_christmasCardRecipient != value)
                {
                    _christmasCardRecipient = value;
                    OnPropertyChanged("ChristmasCardRecipient");
                }
            }
        }
        private Nullable<bool> _christmasCardRecipient;
    
        [DataMember]
        public string Gender1
        {
            get { return _gender1; }
            set
            {
                if (_gender1 != value)
                {
                    _gender1 = value;
                    OnPropertyChanged("Gender1");
                }
            }
        }
        private string _gender1;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
